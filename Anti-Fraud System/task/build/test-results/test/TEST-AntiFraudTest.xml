<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AntiFraudTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2023-04-25T00:31:06" hostname="LAPTOP-EJJDSMUQ" time="34.458">
  <properties/>
  <testcase name="start" classname="AntiFraudTest" time="34.458"/>
  <system-out><![CDATA[?[1;31m
Start test 1?[0m
?[0;34m
?[0m?[0;34m  .   ____          _            __ _ _
?[0m?[0;34m /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
?[0m?[0;34m( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
?[0m?[0;34m \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
?[0m?[0;34m  '  |____| .__|_| |_|_| |_\__, | / / / /
?[0m?[0;34m =========|_|==============|___/=/_/_/_/
?[0m?[0;34m :: Spring Boot ::        (v2.3.1.RELEASE)
?[0m?[0;34m
?[0m?[0;34m2023-04-24 19:31:09.241  INFO 20796 --- [    Test worker] antifraud.AntiFraudApplication           : Starting AntiFraudApplication on LAPTOP-EJJDSMUQ with PID 20796 (started by Uriel Yael in C:\Users\10000215610\Documents\GitHub\Anti-Fraud System\Anti-Fraud System\task)
?[0m?[0;34m2023-04-24 19:31:09.247  INFO 20796 --- [    Test worker] antifraud.AntiFraudApplication           : No active profile set, falling back to default profiles: default
?[0m?[0;34m2023-04-24 19:31:10.973  INFO 20796 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFERRED mode.
?[0m?[0;34m2023-04-24 19:31:11.124  INFO 20796 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 133ms. Found 5 JPA repository interfaces.
?[0m?[0;34m2023-04-24 19:31:11.765  INFO 20796 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1642eeae' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
?[0m?[0;34m2023-04-24 19:31:11.780  INFO 20796 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
?[0m?[0;34m2023-04-24 19:31:12.395  INFO 20796 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 28852 (http)
?[0m?[0;34m2023-04-24 19:31:12.411  INFO 20796 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
?[0m?[0;34m2023-04-24 19:31:12.412  INFO 20796 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.36]
?[0m?[0;34m2023-04-24 19:31:12.579  INFO 20796 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
?[0m?[0;34m2023-04-24 19:31:12.580  INFO 20796 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3253 ms
?[0m?[0;34m2023-04-24 19:31:12.853  INFO 20796 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
?[0m?[0;34m2023-04-24 19:31:13.244  INFO 20796 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
?[0m?[0;34m2023-04-24 19:31:13.282  INFO 20796 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:file:../service_db'
?[0m?[0;34m2023-04-24 19:31:13.547  INFO 20796 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
?[0;34m2023-04-24 19:31:13.654  INFO 20796 --- [         task-1] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
?[0m?[0;34m2023-04-24 19:31:13.715  WARN 20796 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
?[0m?[0;34m2023-04-24 19:31:13.797  INFO 20796 --- [         task-1] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.4.17.Final
?[0m?[0;34m2023-04-24 19:31:14.164  INFO 20796 --- [         task-1] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
?[0m?[0;34m2023-04-24 19:31:14.266  INFO 20796 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6be766d1, org.springframework.security.web.context.SecurityContextPersistenceFilter@43786627, org.springframework.security.web.header.HeaderWriterFilter@c11332b, org.springframework.security.web.authentication.logout.LogoutFilter@699d96bc, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@38a96593, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@65e620b0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7956f93a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7adae08e, org.springframework.security.web.session.SessionManagementFilter@2e1add6f, org.springframework.security.web.access.ExceptionTranslationFilter@25fd6d1e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7e81617a]
?[0m?[0;34m2023-04-24 19:31:14.546  INFO 20796 --- [         task-1] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[0m?[0;34mHibernate: create table region (region_id bigint generated by default as identity, code varchar(255), description varchar(255), primary key (region_id))
?[0m?[0;34mHibernate: create table stolen_card (stolen_card_id bigint not null, number varchar(255), primary key (stolen_card_id))
?[0m?[0;34mHibernate: create table suspicious_ip (suspicious_ip_id bigint not null, ip varchar(255), primary key (suspicious_ip_id))
?[0m?[0;34mHibernate: create table transaction (transaction_id bigint not null, amount bigint, date timestamp, ip varchar(255), number varchar(255), region_id bigint, primary key (transaction_id))
?[0m?[0;34mHibernate: create table user (user_id bigint not null, name varchar(255), password varchar(255), role integer, unlock boolean not null, username varchar(255), primary key (user_id))
?[0m?[0;34mHibernate: create sequence hibernate_sequence start with 1 increment by 1
?[0m?[0;34mHibernate: alter table transaction add constraint FKayr4tu9shl47odlkwy9h69vhl foreign key (region_id) references region
?[0m?[0;34m2023-04-24 19:31:16.173  INFO 20796 --- [         task-1] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
?[0m?[0;34m2023-04-24 19:31:16.189  INFO 20796 --- [         task-1] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
?[0m?[0;34m2023-04-24 19:31:16.394  INFO 20796 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'
?[0m?[0;34m2023-04-24 19:31:16.529  INFO 20796 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 28852 (http) with context path ''
?[0m?[0;34m2023-04-24 19:31:16.531  INFO 20796 --- [    Test worker] DeferredRepositoryInitializationListener : Triggering deferred initialization of Spring Data repositoriesâ€¦
?[0m?[0;34m2023-04-24 19:31:17.215  INFO 20796 --- [    Test worker] DeferredRepositoryInitializationListener : Spring Data repositories initialized!
?[0m?[0;34m2023-04-24 19:31:17.229  INFO 20796 --- [    Test worker] antifraud.AntiFraudApplication           : Started AntiFraudApplication in 9.177 seconds (JVM running for 11.315)
?[0m?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '{
?[0m?[0;34m   "name": "John Doe 1",
?[0m?[0;34m   "password": "oa3VvqnLxW"
?[0m?[0;34m}'
?[0m?[0;34mExpectations: 'In case of wrong data in request, endpoint must respond with BAD REQUEST  status (400).'
?[0m?[0;34m-----
?[0;34m2023-04-24 19:31:17.749  INFO 20796 --- [io-28852-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
?[0m?[0;34m2023-04-24 19:31:17.749  INFO 20796 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
?[0m?[0;34m2023-04-24 19:31:17.759  INFO 20796 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
?[0m?[0;34m2023-04-24 19:31:18.049  WARN 20796 --- [io-28852-exec-1] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public antifraud.domain.response.UserResponse antifraud.controller.UserController.registerUser(antifraud.domain.request.UserRequest): [Field error in object 'userRequest' on field 'username': rejected value [null]; codes [NotBlank.userRequest.username,NotBlank.username,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [userRequest.username,username]; arguments []; default message [username]]; default message [must not be blank]] ]
?[0m?[1;31m
Start test 2?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '{
?[0m?[0;34m   "name": "John Doe 2",
?[0m?[0;34m   "username": "johndoe1"
?[0m?[0;34m}'
?[0m?[0;34mExpectations: 'In case of wrong data in request, endpoint must respond with BAD REQUEST  status (400).'
?[0m?[0;34m-----
?[0;34m2023-04-24 19:31:18.136  WARN 20796 --- [io-28852-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public antifraud.domain.response.UserResponse antifraud.controller.UserController.registerUser(antifraud.domain.request.UserRequest): [Field error in object 'userRequest' on field 'password': rejected value [null]; codes [NotBlank.userRequest.password,NotBlank.password,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [userRequest.password,password]; arguments []; default message [password]]; default message [must not be blank]] ]
?[0m?[1;31m
Start test 3?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '{
?[0m?[0;34m   "name": "John Doe 1",
?[0m?[0;34m   "username": "johndoe1",
?[0m?[0;34m   "password": "oMoa3VvqnLxW"
?[0m?[0;34m}'
?[0m?[0;34mExpectations: 'If user successfully added, endpoint must respond with HTTP CREATED status (201) '
?[0m?[0;34m-----
?[0;34mHibernate: select user0_.user_id as col_0_0_ from user user0_ where user0_.role=? limit ?
?[0m?[0;34mHibernate: select user0_.user_id as col_0_0_ from user user0_ where user0_.username=? limit ?
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into user (name, password, role, unlock, username, user_id) values (?, ?, ?, ?, ?, ?)
?[0m?[1;31m
Start test 4?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'Endpoint must respond with HTTP OK status (200) and body with array of objects representing the users sorted by ID in ascending order.'
?[0m?[0;34m-----
?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ order by user0_.user_id asc
?[0m?[1;31m
Start test 5?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '{
?[0m?[0;34m   "name": "John Doe 1",
?[0m?[0;34m   "username": "johndoe1",
?[0m?[0;34m   "password": "oMoa3VvqnLxW"
?[0m?[0;34m}'
?[0m?[0;34mExpectations: 'If user successfully added, endpoint must respond with HTTP CREATED status (201) '
?[0m?[0;34m-----
?[0;34mHibernate: select user0_.user_id as col_0_0_ from user user0_ where user0_.role=? limit ?
?[0m?[0;34mHibernate: select user0_.user_id as col_0_0_ from user user0_ where user0_.username=? limit ?
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into user (name, password, role, unlock, username, user_id) values (?, ?, ?, ?, ?, ?)
?[0m?[1;31m
Start test 6?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'Endpoint must respond with HTTP OK status (200) and body with array of objects representing the users sorted by ID in ascending order.'
?[0m?[0;34m-----
?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ order by user0_.user_id asc
?[0m?[1;31m
Start test 7?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'A user with incorrect credentials is not allowed'
?[0m?[0;34m-----
?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 8?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'A user with incorrect credentials is not allowed'
?[0m?[0;34m-----
?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 9?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Merchant after registration must be LOCKED'
?[0m?[0;34m-----
?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 10?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/access'
?[0m?[0;34mExpectations: 'A user johndoe1 must be UNLOCKED'
?[0m?[0;34m-----
?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: update user set name=?, password=?, role=?, unlock=?, username=? where user_id=?
?[0m?[1;31m
Start test 11?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'A user johndoe1 must be UNLOCKED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:19.441  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 200 request : TransactionRequest(amount=1, ip=192.168.1.1, number=4000008449433403, region=EAP, date=2022-01-22T16:00)
?[0m?[0;34m2023-04-24 19:31:19.453  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.1
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:19.461  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.1 result : false
?[0m?[0;34m2023-04-24 19:31:19.461  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:19.468  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:19.469  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:00, end : 2022-01-22T16:00
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:19.558  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:00, end : 2022-01-22T16:00
?[0m?[0;34m2023-04-24 19:31:19.558  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:19.563  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Count : 0 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:19.564  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:19.587  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:19.588  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:00) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:19.610  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=3, amount=1, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:00) in the database.
?[0m?[1;31m
Start test 12?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 1'
?[0m?[0;34mExpectations: 'Result validating of Transaction must be 'ALLOWED''
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:19.705  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 200 request : TransactionRequest(amount=1, ip=192.168.1.1, number=4000008449433403, region=EAP, date=2022-01-22T16:00)
?[0m?[0;34m2023-04-24 19:31:19.705  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.1
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:19.708  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.1 result : false
?[0m?[0;34m2023-04-24 19:31:19.708  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:19.710  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:19.710  INFO 20796 --- [io-28852-exec-9] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:00, end : 2022-01-22T16:00
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:19.713  INFO 20796 --- [io-28852-exec-9] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:00, end : 2022-01-22T16:00
?[0m?[0;34m2023-04-24 19:31:19.714  INFO 20796 --- [io-28852-exec-9] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:19.716  INFO 20796 --- [io-28852-exec-9] a.s.t.TransactionVerificationService     : Count : 0 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:19.717  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:19.719  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:19.719  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:00) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:19.723  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=4, amount=1, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:00) in the database.
?[0m?[1;31m
Start test 13?[0m
?[0;34m2023-04-24 19:31:20.301  INFO 20796 --- [     Thread-336] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
?[0m?[0;34m2023-04-24 19:31:20.303  INFO 20796 --- [     Thread-336] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
?[0m?[0;34m2023-04-24 19:31:20.304  INFO 20796 --- [     Thread-336] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
?[0m?[0;34m2023-04-24 19:31:20.356  INFO 20796 --- [     Thread-336] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
?[0;34m
?[0m?[0;34m  .   ____          _            __ _ _
?[0m?[0;34m /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
?[0m?[0;34m( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
?[0m?[0;34m \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
?[0m?[0;34m  '  |____| .__|_| |_|_| |_\__, | / / / /
?[0m?[0;34m =========|_|==============|___/=/_/_/_/
?[0m?[0;34m :: Spring Boot ::        (v2.3.1.RELEASE)
?[0m?[0;34m
?[0m?[0;34m2023-04-24 19:31:30.668  INFO 20796 --- [    Test worker] antifraud.AntiFraudApplication           : Starting AntiFraudApplication on LAPTOP-EJJDSMUQ with PID 20796 (started by Uriel Yael in C:\Users\10000215610\Documents\GitHub\Anti-Fraud System\Anti-Fraud System\task)
?[0m?[0;34m2023-04-24 19:31:30.668  INFO 20796 --- [    Test worker] antifraud.AntiFraudApplication           : No active profile set, falling back to default profiles: default
?[0m?[0;34m2023-04-24 19:31:31.448  INFO 20796 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFERRED mode.
?[0m?[0;34m2023-04-24 19:31:31.496  INFO 20796 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 46ms. Found 5 JPA repository interfaces.
?[0m?[0;34m2023-04-24 19:31:31.602  INFO 20796 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@8ce4320' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
?[0m?[0;34m2023-04-24 19:31:31.607  INFO 20796 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
?[0m?[0;34m2023-04-24 19:31:31.677  INFO 20796 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 28852 (http)
?[0m?[0;34m2023-04-24 19:31:31.679  INFO 20796 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
?[0m?[0;34m2023-04-24 19:31:31.679  INFO 20796 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.36]
?[0m?[0;34m2023-04-24 19:31:31.731  INFO 20796 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
?[0m?[0;34m2023-04-24 19:31:31.732  INFO 20796 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1058 ms
?[0m?[0;34m2023-04-24 19:31:31.803  INFO 20796 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
?[0m?[0;34m2023-04-24 19:31:31.818  INFO 20796 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
?[0m?[0;34m2023-04-24 19:31:31.818  INFO 20796 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:file:../service_db'
?[0m?[0;34m2023-04-24 19:31:31.929  INFO 20796 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
?[0;34m2023-04-24 19:31:31.954  INFO 20796 --- [         task-1] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
?[0m?[0;34m2023-04-24 19:31:31.967  INFO 20796 --- [         task-1] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[0m?[0;34m2023-04-24 19:31:32.007  WARN 20796 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
?[0m?[0;34m2023-04-24 19:31:32.119  INFO 20796 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@57f83c82, org.springframework.security.web.context.SecurityContextPersistenceFilter@af96ac9, org.springframework.security.web.header.HeaderWriterFilter@3e170abe, org.springframework.security.web.authentication.logout.LogoutFilter@630febd7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@45c2c396, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@27d0376f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@21948bd1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7a600e21, org.springframework.security.web.session.SessionManagementFilter@712e4b18, org.springframework.security.web.access.ExceptionTranslationFilter@278150a1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@ea45a5b]
?[0m?[0;34m2023-04-24 19:31:32.161  INFO 20796 --- [         task-1] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
?[0m?[0;34m2023-04-24 19:31:32.162  INFO 20796 --- [         task-1] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
?[0m?[0;34m2023-04-24 19:31:32.506  INFO 20796 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'
?[0m?[0;34m2023-04-24 19:31:32.564  INFO 20796 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 28852 (http) with context path ''
?[0m?[0;34m2023-04-24 19:31:32.568  INFO 20796 --- [    Test worker] DeferredRepositoryInitializationListener : Triggering deferred initialization of Spring Data repositoriesâ€¦
?[0m?[0;34m2023-04-24 19:31:32.749  INFO 20796 --- [    Test worker] DeferredRepositoryInitializationListener : Spring Data repositories initialized!
?[0m?[0;34m2023-04-24 19:31:32.756  INFO 20796 --- [    Test worker] antifraud.AntiFraudApplication           : Started AntiFraudApplication in 2.122 seconds (JVM running for 26.842)
?[0m?[1;31m
Start test 14?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'After restart user must exist'
?[0m?[0;34m-----
?[0;34m2023-04-24 19:31:32.770  INFO 20796 --- [io-28852-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
?[0m?[0;34m2023-04-24 19:31:32.770  INFO 20796 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
?[0m?[0;34m2023-04-24 19:31:32.774  INFO 20796 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ order by user0_.user_id asc
?[0m?[1;31m
Start test 15?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '{
?[0m?[0;34m   "name": "John Doe 1",
?[0m?[0;34m   "username": "johndoe1",
?[0m?[0;34m   "password": "oMoa3VvqnLxW"
?[0m?[0;34m}'
?[0m?[0;34mExpectations: 'In case of an attempt to register an existing user, endpoint must respond with HTTP CONFLICT status (409).'
?[0m?[0;34m-----
?[0;34mHibernate: select user0_.user_id as col_0_0_ from user user0_ where user0_.role=? limit ?
?[0m?[0;34mHibernate: select user0_.user_id as col_0_0_ from user user0_ where user0_.username=? limit ?
?[0m?[1;31m
Start test 16?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '{
?[0m?[0;34m   "name": "John Doe 2",
?[0m?[0;34m   "username": "johndoe2",
?[0m?[0;34m   "password": "oMoa5VvqnLxW"
?[0m?[0;34m}'
?[0m?[0;34mExpectations: 'If user successfully added, endpoint must respond with HTTP CREATED status (201) '
?[0m?[0;34m-----
?[0;34mHibernate: select user0_.user_id as col_0_0_ from user user0_ where user0_.role=? limit ?
?[0m?[0;34mHibernate: select user0_.user_id as col_0_0_ from user user0_ where user0_.username=? limit ?
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into user (name, password, role, unlock, username, user_id) values (?, ?, ?, ?, ?, ?)
?[0m?[1;31m
Start test 17?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'Endpoint must respond with HTTP OK status (200) and body with array of objects representing the users sorted by ID in ascending order.'
?[0m?[0;34m-----
?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ order by user0_.user_id asc
?[0m?[1;31m
Start test 18?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 199'
?[0m?[0;34mExpectations: 'Result validating of Transaction must be 'ALLOWED''
?[0m?[0;34m-----
?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:33.283  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 200 request : TransactionRequest(amount=199, ip=192.168.1.1, number=4000008449433403, region=EAP, date=2022-01-22T16:01)
?[0m?[0;34m2023-04-24 19:31:33.283  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.1
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:33.289  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.1 result : false
?[0m?[0;34m2023-04-24 19:31:33.289  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:33.295  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:33.295  INFO 20796 --- [io-28852-exec-5] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:01, end : 2022-01-22T16:01
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:33.300  INFO 20796 --- [io-28852-exec-5] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:01, end : 2022-01-22T16:01
?[0m?[0;34m2023-04-24 19:31:33.300  INFO 20796 --- [io-28852-exec-5] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:33.303  INFO 20796 --- [io-28852-exec-5] a.s.t.TransactionVerificationService     : Count : 0 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:33.304  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:33.309  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:33.309  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=199, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:01) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:33.319  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=6, amount=199, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:01) in the database.
?[0m?[1;31m
Start test 19?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 200'
?[0m?[0;34mExpectations: 'Result validating of Transaction must be 'ALLOWED''
?[0m?[0;34m-----
?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:33.412  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 200 request : TransactionRequest(amount=200, ip=192.168.1.1, number=4000008449433403, region=EAP, date=2022-01-22T16:02)
?[0m?[0;34m2023-04-24 19:31:33.412  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.1
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:33.413  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.1 result : false
?[0m?[0;34m2023-04-24 19:31:33.413  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:33.414  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:33.415  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:02, end : 2022-01-22T16:02
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:33.416  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:02, end : 2022-01-22T16:02
?[0m?[0;34m2023-04-24 19:31:33.416  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:33.418  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : Count : 0 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:33.419  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:33.422  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:33.422  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=200, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:02) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:33.424  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=7, amount=200, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:02) in the database.
?[0m?[1;31m
Start test 20?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 201'
?[0m?[0;34mExpectations: 'Result validating of Transaction must be 'MANUAL_PROCESSING''
?[0m?[0;34m-----
?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:33.509  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 1500 request : TransactionRequest(amount=201, ip=192.168.1.1, number=4000008449433403, region=EAP, date=2022-01-22T16:03)
?[0m?[0;34m2023-04-24 19:31:33.509  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.1
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:33.510  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.1 result : false
?[0m?[0;34m2023-04-24 19:31:33.511  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:33.512  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:33.512  INFO 20796 --- [io-28852-exec-7] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:03, end : 2022-01-22T16:03
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:33.515  INFO 20796 --- [io-28852-exec-7] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:03, end : 2022-01-22T16:03
?[0m?[0;34m2023-04-24 19:31:33.515  INFO 20796 --- [io-28852-exec-7] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:33.517  INFO 20796 --- [io-28852-exec-7] a.s.t.TransactionVerificationService     : Count : 0 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:33.517  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:33.519  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:33.519  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=201, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:03) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:33.524  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=8, amount=201, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:03) in the database.
?[0m?[1;31m
Start test 21?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 1499'
?[0m?[0;34mExpectations: 'Result validating of Transaction must be 'MANUAL_PROCESSING''
?[0m?[0;34m-----
?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:33.616  INFO 20796 --- [io-28852-exec-8] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 1500 request : TransactionRequest(amount=1499, ip=192.168.1.1, number=4000008449433403, region=EAP, date=2022-01-22T16:04)
?[0m?[0;34m2023-04-24 19:31:33.616  INFO 20796 --- [io-28852-exec-8] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.1
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:33.618  INFO 20796 --- [io-28852-exec-8] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.1 result : false
?[0m?[0;34m2023-04-24 19:31:33.618  INFO 20796 --- [io-28852-exec-8] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:33.620  INFO 20796 --- [io-28852-exec-8] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:33.620  INFO 20796 --- [io-28852-exec-8] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:04, end : 2022-01-22T16:04
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:33.622  INFO 20796 --- [io-28852-exec-8] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:04, end : 2022-01-22T16:04
?[0m?[0;34m2023-04-24 19:31:33.622  INFO 20796 --- [io-28852-exec-8] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:33.626  INFO 20796 --- [io-28852-exec-8] a.s.t.TransactionVerificationService     : Count : 0 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:33.626  INFO 20796 --- [io-28852-exec-8] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:33.628  INFO 20796 --- [io-28852-exec-8] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:33.628  INFO 20796 --- [io-28852-exec-8] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1499, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:04) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:33.631  INFO 20796 --- [io-28852-exec-8] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=9, amount=1499, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:04) in the database.
?[0m?[1;31m
Start test 22?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 1500'
?[0m?[0;34mExpectations: 'Result validating of Transaction must be 'MANUAL_PROCESSING''
?[0m?[0;34m-----
?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:33.722  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 1500 request : TransactionRequest(amount=1500, ip=192.168.1.1, number=4000008449433403, region=EAP, date=2022-01-22T16:05)
?[0m?[0;34m2023-04-24 19:31:33.722  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.1
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:33.723  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.1 result : false
?[0m?[0;34m2023-04-24 19:31:33.723  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:33.724  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:33.725  INFO 20796 --- [io-28852-exec-9] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:05, end : 2022-01-22T16:05
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:33.727  INFO 20796 --- [io-28852-exec-9] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:05, end : 2022-01-22T16:05
?[0m?[0;34m2023-04-24 19:31:33.727  INFO 20796 --- [io-28852-exec-9] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:33.729  INFO 20796 --- [io-28852-exec-9] a.s.t.TransactionVerificationService     : Count : 0 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:33.729  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:33.731  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:33.731  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1500, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:05) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:33.733  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=10, amount=1500, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:05) in the database.
?[0m?[1;31m
Start test 23?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 1501'
?[0m?[0;34mExpectations: 'Result validating of Transaction must be 'PROHIBITED''
?[0m?[0;34m-----
?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:33.822  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Processing the transaction with amount greater than 1500 request : TransactionRequest(amount=1501, ip=192.168.1.1, number=4000008449433403, region=EAP, date=2022-01-22T16:06)
?[0m?[0;34m2023-04-24 19:31:33.822  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.1
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:33.823  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.1 result : false
?[0m?[0;34m2023-04-24 19:31:33.823  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:33.824  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:33.824  INFO 20796 --- [o-28852-exec-10] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:06, end : 2022-01-22T16:06
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:33.825  INFO 20796 --- [o-28852-exec-10] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:06, end : 2022-01-22T16:06
?[0m?[0;34m2023-04-24 19:31:33.825  INFO 20796 --- [o-28852-exec-10] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:33.827  INFO 20796 --- [o-28852-exec-10] a.s.t.TransactionVerificationService     : Count : 0 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:33.827  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:33.828  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:33.828  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1501, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:06) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:33.831  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=11, amount=1501, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:06) in the database.
?[0m?[1;31m
Start test 24?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 2000'
?[0m?[0;34mExpectations: 'Result validating of Transaction must be 'PROHIBITED''
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:33.914  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Processing the transaction with amount greater than 1500 request : TransactionRequest(amount=2000, ip=192.168.1.1, number=4000008449433403, region=EAP, date=2022-01-22T16:07)
?[0m?[0;34m2023-04-24 19:31:33.914  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.1
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:33.915  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.1 result : false
?[0m?[0;34m2023-04-24 19:31:33.915  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:33.916  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:33.916  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:07, end : 2022-01-22T16:07
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:33.918  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:07, end : 2022-01-22T16:07
?[0m?[0;34m2023-04-24 19:31:33.918  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:33.919  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Count : 0 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:33.920  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:33.921  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:33.921  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=2000, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:07) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:33.924  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=12, amount=2000, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:07) in the database.
?[0m?[1;31m
Start test 25?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = -1'
?[0m?[0;34mExpectations: 'Response status must be 'Bad request''
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:34.019  WARN 20796 --- [io-28852-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public antifraud.domain.response.TransactionResponse antifraud.controller.AntiFraudController.postTransaction(antifraud.domain.request.TransactionRequest): [Field error in object 'transactionRequest' on field 'amount': rejected value [-1]; codes [Positive.transactionRequest.amount,Positive.amount,Positive.long,Positive]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [transactionRequest.amount,amount]; arguments []; default message [amount]]; default message [must be greater than 0]] ]
?[0m?[1;31m
Start test 26?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = 0'
?[0m?[0;34mExpectations: 'Response status must be 'Bad request''
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:34.104  WARN 20796 --- [io-28852-exec-3] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public antifraud.domain.response.TransactionResponse antifraud.controller.AntiFraudController.postTransaction(antifraud.domain.request.TransactionRequest): [Field error in object 'transactionRequest' on field 'amount': rejected value [0]; codes [Positive.transactionRequest.amount,Positive.amount,Positive.long,Positive]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [transactionRequest.amount,amount]; arguments []; default message [amount]]; default message [must be greater than 0]] ]
?[0m?[1;31m
Start test 27?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = null'
?[0m?[0;34mExpectations: 'Response status must be 'Bad request''
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:34.190  WARN 20796 --- [io-28852-exec-4] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public antifraud.domain.response.TransactionResponse antifraud.controller.AntiFraudController.postTransaction(antifraud.domain.request.TransactionRequest): [Field error in object 'transactionRequest' on field 'amount': rejected value [0]; codes [Positive.transactionRequest.amount,Positive.amount,Positive.long,Positive]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [transactionRequest.amount,amount]; arguments []; default message [amount]]; default message [must be greater than 0]] ]
?[0m?[1;31m
Start test 28?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = ""'
?[0m?[0;34mExpectations: 'Response status must be 'Bad request''
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:34.274  WARN 20796 --- [io-28852-exec-5] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public antifraud.domain.response.TransactionResponse antifraud.controller.AntiFraudController.postTransaction(antifraud.domain.request.TransactionRequest): [Field error in object 'transactionRequest' on field 'amount': rejected value [0]; codes [Positive.transactionRequest.amount,Positive.amount,Positive.long,Positive]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [transactionRequest.amount,amount]; arguments []; default message [amount]]; default message [must be greater than 0]] ]
?[0m?[1;31m
Start test 29?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'amount = " "'
?[0m?[0;34mExpectations: 'Response status must be 'Bad request''
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:34.359  WARN 20796 --- [io-28852-exec-6] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public antifraud.domain.response.TransactionResponse antifraud.controller.AntiFraudController.postTransaction(antifraud.domain.request.TransactionRequest): [Field error in object 'transactionRequest' on field 'amount': rejected value [0]; codes [Positive.transactionRequest.amount,Positive.amount,Positive.long,Positive]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [transactionRequest.amount,amount]; arguments []; default message [amount]]; default message [must be greater than 0]] ]
?[0m?[1;31m
Start test 30?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mrequest: 'empty body'
?[0m?[0;34mExpectations: 'Response status must be 'Bad request''
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:34.444  WARN 20796 --- [io-28852-exec-7] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public antifraud.domain.response.TransactionResponse antifraud.controller.AntiFraudController.postTransaction(antifraud.domain.request.TransactionRequest) with 4 errors: [Field error in object 'transactionRequest' on field 'amount': rejected value [0]; codes [Positive.transactionRequest.amount,Positive.amount,Positive.long,Positive]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [transactionRequest.amount,amount]; arguments []; default message [amount]]; default message [must be greater than 0]] [Field error in object 'transactionRequest' on field 'number': rejected value [null]; codes [NotBlank.transactionRequest.number,NotBlank.number,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [transactionRequest.number,number]; arguments []; default message [number]]; default message [must not be blank]] [Field error in object 'transactionRequest' on field 'region': rejected value [null]; codes [NotBlank.transactionRequest.region,NotBlank.region,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [transactionRequest.region,region]; arguments []; default message [region]]; default message [must not be blank]] [Field error in object 'transactionRequest' on field 'ip': rejected value [null]; codes [NotBlank.transactionRequest.ip,NotBlank.ip,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [transactionRequest.ip,ip]; arguments []; default message [ip]]; default message [must not be blank]] ]
?[0m?[1;31m
Start test 31?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '/api/auth/user/somebody'
?[0m?[0;34mExpectations: 'If a user is not found, respond with HTTP Not Found status (404).'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select user0_.user_id as col_0_0_ from user user0_ where user0_.username=? limit ?
?[0m?[1;31m
Start test 32?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '/api/auth/user/johndoe1'
?[0m?[0;34mExpectations: 'The endpoint must delete the user and respond with HTTP OK status (200)'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select user0_.user_id as col_0_0_ from user user0_ where user0_.username=? limit ?
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: delete from user where user_id=?
?[0m?[1;31m
Start test 33?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'User 'johndoe1' must be delete'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ order by user0_.user_id asc
?[0m?[1;31m
Start test 34?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/role'
?[0m?[0;34mExpectations: 'If a user is not found, endpoint must respond with the HTTP Not Found status (404).'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 35?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/role'
?[0m?[0;34mExpectations: 'If a role is not found, endpoint must respond with the HTTP Bad Request status (400).'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:34.899  WARN 20796 --- [io-28852-exec-1] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `antifraud.domain.security.RoleEnum` from String "USER": not one of the values accepted for Enum class: [MERCHANT, ADMINISTRATOR, SUPPORT]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `antifraud.domain.security.RoleEnum` from String "USER": not one of the values accepted for Enum class: [MERCHANT, ADMINISTRATOR, SUPPORT]
?[0m?[0;34m at [Source: (PushbackInputStream); line: 1, column: 31] (through reference chain: antifraud.domain.request.RoleRequest["role"])]
?[0m?[1;31m
Start test 36?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/role'
?[0m?[0;34mExpectations: 'If a role is ADMINISTRATOR, endpoint must respond with the HTTP Bad Request status (400).'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 37?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/role'
?[0m?[0;34mExpectations: 'If a role successfully changed, respond with the HTTP OK status (200)'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: update user set name=?, password=?, role=?, unlock=?, username=? where user_id=?
?[0m?[1;31m
Start test 38?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/role'
?[0m?[0;34mExpectations: 'If a role already assigned to a user, endpoint must respond with the HTTP Conflict status (409).'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 39?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/access'
?[0m?[0;34mExpectations: 'A user johndoe2 must be UNLOCKED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: update user set name=?, password=?, role=?, unlock=?, username=? where user_id=?
?[0m?[1;31m
Start test 40?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'Role for user 'johndoe2' must be changed to SUPPORT'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ order by user0_.user_id asc
?[0m?[1;31m
Start test 41?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Role MERCHANT must be removed from user johndoe2!'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 42?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mrequest: '{
?[0m?[0;34m   "name": "John Doe 3",
?[0m?[0;34m   "username": "johndoe3",
?[0m?[0;34m   "password": "oMoa6VvqnLxW"
?[0m?[0;34m}'
?[0m?[0;34mExpectations: 'If user successfully added, endpoint must respond with HTTP CREATED status (201) '
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as col_0_0_ from user user0_ where user0_.role=? limit ?
?[0m?[0;34mHibernate: select user0_.user_id as col_0_0_ from user user0_ where user0_.username=? limit ?
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into user (name, password, role, unlock, username, user_id) values (?, ?, ?, ?, ?, ?)
?[0m?[1;31m
Start test 43?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'MERCHANT user after registration must be LOCKED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 44?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/access'
?[0m?[0;34mExpectations: 'A user johndoe3 must be UNLOCKED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: update user set name=?, password=?, role=?, unlock=?, username=? where user_id=?
?[0m?[1;31m
Start test 45?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'A user johndoe3 must be UNLOCKED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:35.700  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 200 request : TransactionRequest(amount=1, ip=192.168.1.1, number=4000008449433403, region=EAP, date=2022-01-22T16:00)
?[0m?[0;34m2023-04-24 19:31:35.700  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.1
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:35.701  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.1 result : false
?[0m?[0;34m2023-04-24 19:31:35.701  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:35.703  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:35.703  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:00, end : 2022-01-22T16:00
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:35.705  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:00, end : 2022-01-22T16:00
?[0m?[0;34m2023-04-24 19:31:35.706  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:35.708  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Count : 0 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:35.709  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:35.710  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:35.710  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:00) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:35.713  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=14, amount=1, number=4000008449433403, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:00) in the database.
?[0m?[1;31m
Start test 46?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/access'
?[0m?[0;34mExpectations: 'A user johndoe3 must be LOCKED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: update user set name=?, password=?, role=?, unlock=?, username=? where user_id=?
?[0m?[1;31m
Start test 47?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'A user johndoe3 must be LOCKED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 48?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/access'
?[0m?[0;34mExpectations: 'A user johndoe3 must be UNLOCKED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: update user set name=?, password=?, role=?, unlock=?, username=? where user_id=?
?[0m?[1;31m
Start test 49?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'A user with role ADMINISTRATOR must not have access to /api/antifraud/transaction'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 50?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'A user with role SUPPORT must not have access to /api/antifraud/transaction'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 51?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'A user with role ANONYMOUS must not have access to /api/antifraud/transaction'
?[0m?[0;34m-----
?[0m?[1;31m
Start test 52?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mExpectations: 'A user with role ANONYMOUS must not have access to DELETE /api/auth/user'
?[0m?[0;34m-----
?[0m?[1;31m
Start test 53?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mExpectations: 'A user with role SUPPORT must not have access to DELETE /api/auth/user'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 54?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/user'
?[0m?[0;34mExpectations: 'A user with role MERCHANT must not have access to DELETE /api/auth/user'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 55?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'A user with role ANONYMOUS must not have access to /api/auth/list'
?[0m?[0;34m-----
?[0m?[1;31m
Start test 56?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/auth/list'
?[0m?[0;34mExpectations: 'A user with role MERCHANT must not have access to /api/auth/list'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 57?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'A user with role ADMINISTRATOR must not have access to GET /api/antifraud/suspicious-ip'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 58?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'A user with role MERCHANT must not have access to GET /api/antifraud/suspicious-ip'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 59?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'A user with role ADMINISTRATOR must not have access to POST /api/antifraud/suspicious-ip'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 60?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'A user with role MERCHANT must not have access to POST /api/antifraud/suspicious-ip'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 61?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'A user with role ADMINISTRATOR must not have access to DELETE /api/antifraud/suspicious-ip'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 62?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'A user with role MERCHANT must not have access to DELETE /api/antifraud/suspicious-ip'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 63?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'A user with role ADMINISTRATOR must not have access to GET /api/antifraud/stolencard'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 64?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'A user with role MERCHANT must not have access to GET /api/antifraud/stolencard'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 65?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'A user with role ADMINISTRATOR must not have access to POST /api/antifraud/stolencard'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 66?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'A user with role MERCHANT must not have access to POST /api/antifraud/stolencard'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 67?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'A user with role ADMINISTRATOR must not have access to DELETE /api/antifraud/stolencard'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 68?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'A user with role MERCHANT must not have access to DELETE /api/antifraud/stolencard'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 69?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'Endpoint must respond with empty array'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:37.442  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Retrieving the list of suspicious ips
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as suspicio1_2_, suspicious0_.ip as ip2_2_ from suspicious_ip suspicious0_ order by suspicious0_.suspicious_ip_id asc
?[0m?[1;31m
Start test 70?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'IP must be added to Black List'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:37.527  INFO 20796 --- [io-28852-exec-8] antifraud.service.AntiFraudService       : Starting the process to create the suspicious ip with the request : SuspiciousIpRequest(ip=192.168.1.66)
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into suspicious_ip (ip, suspicious_ip_id) values (?, ?)
?[0m?[0;34m2023-04-24 19:31:37.533 ERROR 20796 --- [io-28852-exec-8] antifraud.service.AntiFraudService       : Saving the suspicious ip successfully SuspiciousIp(suspiciousIpId=15, ip=192.168.1.66)
?[0m?[1;31m
Start test 71?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'If IP already in database,  endpoint must respond with the HTTP Conflict status (409).'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:37.620  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Starting the process to create the suspicious ip with the request : SuspiciousIpRequest(ip=192.168.1.66)
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:37.621 ERROR 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : This ip is already in database
?[0m?[1;31m
Start test 72?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'If IP doesn't have right format, respond with HTTP Bad Request status (400)'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:37.711  WARN 20796 --- [io-28852-exec-6] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public antifraud.domain.response.SuspiciousIpResponse antifraud.controller.AntiFraudController.createSuspiciousIp(antifraud.domain.request.SuspiciousIpRequest): [Field error in object 'suspiciousIpRequest' on field 'ip': rejected value [192.168.351.66]; codes [Pattern.suspiciousIpRequest.ip,Pattern.ip,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [suspiciousIpRequest.ip,ip]; arguments []; default message [ip],[Ljavax.validation.constraints.Pattern$Flag;@3a37c5f6,^((0|1\d?\d?|2[0-4]?\d?|25[0-5]?|[3-9]\d?)\.){3}(0|1\d?\d?|2[0-4]?\d?|25[0-5]?|[3-9]\d?)$]; default message [must match "^((0|1\d?\d?|2[0-4]?\d?|25[0-5]?|[3-9]\d?)\.){3}(0|1\d?\d?|2[0-4]?\d?|25[0-5]?|[3-9]\d?)$"]] ]
?[0m?[1;31m
Start test 73?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'If IP doesn't have right format, respond with HTTP Bad Request status (400)'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:37.795  WARN 20796 --- [io-28852-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public antifraud.domain.response.SuspiciousIpResponse antifraud.controller.AntiFraudController.createSuspiciousIp(antifraud.domain.request.SuspiciousIpRequest): [Field error in object 'suspiciousIpRequest' on field 'ip': rejected value [192.168.1.]; codes [Pattern.suspiciousIpRequest.ip,Pattern.ip,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [suspiciousIpRequest.ip,ip]; arguments []; default message [ip],[Ljavax.validation.constraints.Pattern$Flag;@3a37c5f6,^((0|1\d?\d?|2[0-4]?\d?|25[0-5]?|[3-9]\d?)\.){3}(0|1\d?\d?|2[0-4]?\d?|25[0-5]?|[3-9]\d?)$]; default message [must match "^((0|1\d?\d?|2[0-4]?\d?|25[0-5]?|[3-9]\d?)\.){3}(0|1\d?\d?|2[0-4]?\d?|25[0-5]?|[3-9]\d?)$"]] ]
?[0m?[1;31m
Start test 74?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'IP must be added to Black List'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:37.879  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Starting the process to create the suspicious ip with the request : SuspiciousIpRequest(ip=192.168.1.67)
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into suspicious_ip (ip, suspicious_ip_id) values (?, ?)
?[0m?[0;34m2023-04-24 19:31:37.881 ERROR 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Saving the suspicious ip successfully SuspiciousIp(suspiciousIpId=16, ip=192.168.1.67)
?[0m?[1;31m
Start test 75?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'Endpoint must responds with Black List'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:37.961  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Retrieving the list of suspicious ips
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as suspicio1_2_, suspicious0_.ip as ip2_2_ from suspicious_ip suspicious0_ order by suspicious0_.suspicious_ip_id asc
?[0m?[1;31m
Start test 76?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'IP must be removed from Black List'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as suspicio1_2_, suspicious0_.ip as ip2_2_ from suspicious_ip suspicious0_ where suspicious0_.ip=?
?[0m?[0;34mHibernate: delete from suspicious_ip where suspicious_ip_id=?
?[0m?[1;31m
Start test 77?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'If IP not found in database, respond with the HTTP Not Found status (404).'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as suspicio1_2_, suspicious0_.ip as ip2_2_ from suspicious_ip suspicious0_ where suspicious0_.ip=?
?[0m?[1;31m
Start test 78?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'If IP doesn't have right format, respond with HTTP Bad Request status (400)'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 79?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'IP must be removed from Black List'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:38.317  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Retrieving the list of suspicious ips
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as suspicio1_2_, suspicious0_.ip as ip2_2_ from suspicious_ip suspicious0_ order by suspicious0_.suspicious_ip_id asc
?[0m?[1;31m
Start test 80?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'Endpoint must respond with empty array'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:38.402  INFO 20796 --- [io-28852-exec-8] antifraud.service.AntiFraudService       : Retrieving the list of suspicious ips
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as stolen_c1_1_, stolencard0_.number as number2_1_ from stolen_card stolencard0_ order by stolencard0_.stolen_card_id asc
?[0m?[1;31m
Start test 81?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'A card must be added to Black List'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:38.487  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Starting the process to create the stolen card with the request : StolenCardRequest(number=4000003305061034)
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into stolen_card (number, stolen_card_id) values (?, ?)
?[0m?[0;34m2023-04-24 19:31:38.494 ERROR 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Saving the stolen card successfully StolenCard(stolenCardId=17, number=4000003305061034)
?[0m?[1;31m
Start test 82?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'If card-number already in database, endpoint must respond with the HTTP Conflict status (409).'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:38.576  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Starting the process to create the stolen card with the request : StolenCardRequest(number=4000003305061034)
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:38.577 ERROR 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : This number is already in database
?[0m?[1;31m
Start test 83?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'If card-number doesn't have right format, endpoint must respond with HTTP Bad Request status (400).'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:38.664  WARN 20796 --- [io-28852-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public antifraud.domain.response.StolenCardResponse antifraud.controller.AntiFraudController.stolenCardResponse(antifraud.domain.request.StolenCardRequest): [Field error in object 'stolenCardRequest' on field 'number': rejected value [400000330506103]; codes [CreditCardNumber.stolenCardRequest.number,CreditCardNumber.number,CreditCardNumber.java.lang.String,CreditCardNumber]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [stolenCardRequest.number,number]; arguments []; default message [number],false]; default message [invalid credit card number]] ]
?[0m?[1;31m
Start test 84?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'If checksum of card-number is wrong, endpoint must respond with HTTP Bad Request status (400).'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:38.747  WARN 20796 --- [io-28852-exec-5] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public antifraud.domain.response.StolenCardResponse antifraud.controller.AntiFraudController.stolenCardResponse(antifraud.domain.request.StolenCardRequest): [Field error in object 'stolenCardRequest' on field 'number': rejected value [4000003305061033]; codes [CreditCardNumber.stolenCardRequest.number,CreditCardNumber.number,CreditCardNumber.java.lang.String,CreditCardNumber]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [stolenCardRequest.number,number]; arguments []; default message [number],false]; default message [invalid credit card number]] ]
?[0m?[1;31m
Start test 85?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'A card must be added to Black List'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:38.831  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Starting the process to create the stolen card with the request : StolenCardRequest(number=4000003305160034)
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into stolen_card (number, stolen_card_id) values (?, ?)
?[0m?[0;34m2023-04-24 19:31:38.833 ERROR 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Saving the stolen card successfully StolenCard(stolenCardId=18, number=4000003305160034)
?[0m?[1;31m
Start test 86?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'Endpoint must responds with Black List'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:38.921  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Retrieving the list of suspicious ips
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as stolen_c1_1_, stolencard0_.number as number2_1_ from stolen_card stolencard0_ order by stolencard0_.stolen_card_id asc
?[0m?[1;31m
Start test 87?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'Card must be removed from Black List'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as stolen_c1_1_, stolencard0_.number as number2_1_ from stolen_card stolencard0_ where stolencard0_.number=?
?[0m?[0;34mHibernate: delete from stolen_card where stolen_card_id=?
?[0m?[1;31m
Start test 88?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'If card-number not found in database, respond with the HTTP Not Found status (404).'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as stolen_c1_1_, stolencard0_.number as number2_1_ from stolen_card stolencard0_ where stolencard0_.number=?
?[0m?[1;31m
Start test 89?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'If card-number doesn't have right format, endpoint must respond with HTTP Bad Request status (400).'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[1;31m
Start test 90?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'Card must be removed from Black List'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:39.261  INFO 20796 --- [io-28852-exec-8] antifraud.service.AntiFraudService       : Retrieving the list of suspicious ips
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as stolen_c1_1_, stolencard0_.number as number2_1_ from stolen_card stolencard0_ order by stolencard0_.stolen_card_id asc
?[0m?[1;31m
Start test 91?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Transaction must be PROHIBITED due to - suspicious ip reason'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:39.350  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 1500 request : TransactionRequest(amount=1000, ip=192.168.1.67, number=4000008449433403, region=EAP, date=2022-01-22T16:00)
?[0m?[0;34m2023-04-24 19:31:39.351  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.67
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:39.352  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.67 result : true
?[0m?[0;34m2023-04-24 19:31:39.352  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:39.353  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:39.353  INFO 20796 --- [io-28852-exec-9] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:00, end : 2022-01-22T16:00
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:39.356  INFO 20796 --- [io-28852-exec-9] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:00, end : 2022-01-22T16:00
?[0m?[0;34m2023-04-24 19:31:39.356  INFO 20796 --- [io-28852-exec-9] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:39.358  INFO 20796 --- [io-28852-exec-9] a.s.t.TransactionVerificationService     : Count : 1 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:39.359  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:39.360  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:39.361  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1000, number=4000008449433403, ip=192.168.1.67, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:00) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:39.363  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=19, amount=1000, number=4000008449433403, ip=192.168.1.67, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:00) in the database.
?[0m?[1;31m
Start test 92?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Transaction must be PROHIBITED due to - stolen card reason'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:39.449  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 1500 request : TransactionRequest(amount=1000, ip=192.168.1.1, number=4000003305160034, region=EAP, date=2022-01-22T16:00)
?[0m?[0;34m2023-04-24 19:31:39.450  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.1
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:39.451  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.1 result : false
?[0m?[0;34m2023-04-24 19:31:39.451  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000003305160034
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:39.452  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:39.452  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:00, end : 2022-01-22T16:00
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:39.453  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:00, end : 2022-01-22T16:00
?[0m?[0;34m2023-04-24 19:31:39.453  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:39.454  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : Count : 1 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:39.454  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:39.455  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:39.455  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1000, number=4000003305160034, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:00) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:39.457  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=20, amount=1000, number=4000003305160034, ip=192.168.1.1, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:00) in the database.
?[0m?[1;31m
Start test 93?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Transaction must be PROHIBITED due to - stolen card, suspicious ip reasons'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:39.538  INFO 20796 --- [io-28852-exec-2] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 1500 request : TransactionRequest(amount=1000, ip=192.168.1.67, number=4000003305160034, region=EAP, date=2022-01-22T16:00)
?[0m?[0;34m2023-04-24 19:31:39.538  INFO 20796 --- [io-28852-exec-2] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.67
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:39.540  INFO 20796 --- [io-28852-exec-2] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.67 result : true
?[0m?[0;34m2023-04-24 19:31:39.540  INFO 20796 --- [io-28852-exec-2] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000003305160034
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:39.541  INFO 20796 --- [io-28852-exec-2] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:39.541  INFO 20796 --- [io-28852-exec-2] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:00, end : 2022-01-22T16:00
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:39.542  INFO 20796 --- [io-28852-exec-2] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:00, end : 2022-01-22T16:00
?[0m?[0;34m2023-04-24 19:31:39.542  INFO 20796 --- [io-28852-exec-2] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:39.543  INFO 20796 --- [io-28852-exec-2] a.s.t.TransactionVerificationService     : Count : 1 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:39.543  INFO 20796 --- [io-28852-exec-2] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:39.544  INFO 20796 --- [io-28852-exec-2] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:39.544  INFO 20796 --- [io-28852-exec-2] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1000, number=4000003305160034, ip=192.168.1.67, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:00) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:39.547  INFO 20796 --- [io-28852-exec-2] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=21, amount=1000, number=4000003305160034, ip=192.168.1.67, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:00) in the database.
?[0m?[1;31m
Start test 94?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Transaction must be PROHIBITED due to - amount, stolen card, suspicious ip reasons'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:39.628  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Processing the transaction with amount greater than 1500 request : TransactionRequest(amount=2000, ip=192.168.1.67, number=4000003305160034, region=EAP, date=2022-01-22T16:00)
?[0m?[0;34m2023-04-24 19:31:39.629  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.67
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:39.630  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.67 result : true
?[0m?[0;34m2023-04-24 19:31:39.630  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000003305160034
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:39.631  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:39.631  INFO 20796 --- [io-28852-exec-5] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:00, end : 2022-01-22T16:00
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:39.632  INFO 20796 --- [io-28852-exec-5] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T15:00, end : 2022-01-22T16:00
?[0m?[0;34m2023-04-24 19:31:39.632  INFO 20796 --- [io-28852-exec-5] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:39.633  INFO 20796 --- [io-28852-exec-5] a.s.t.TransactionVerificationService     : Count : 1 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:39.634  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:39.635  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:39.635  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=2000, number=4000003305160034, ip=192.168.1.67, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:00) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:39.637  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=22, amount=2000, number=4000003305160034, ip=192.168.1.67, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T16:00) in the database.
?[0m?[1;31m
Start test 95?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Transaction must be ALLOWED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:39.721  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 200 request : TransactionRequest(amount=1, ip=192.168.1.2, number=4000008449433403, region=EAP, date=2022-01-22T17:10)
?[0m?[0;34m2023-04-24 19:31:39.722  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.2
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:39.722  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.2 result : false
?[0m?[0;34m2023-04-24 19:31:39.722  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:39.723  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:39.723  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T16:10, end : 2022-01-22T17:10
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:39.724  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T16:10, end : 2022-01-22T17:10
?[0m?[0;34m2023-04-24 19:31:39.725  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:39.725  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Count : 0 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:39.725  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:39.726  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:39.726  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1, number=4000008449433403, ip=192.168.1.2, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T17:10) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:39.728  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=23, amount=1, number=4000008449433403, ip=192.168.1.2, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T17:10) in the database.
?[0m?[1;31m
Start test 96?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Transaction must be ALLOWED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:39.809  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 200 request : TransactionRequest(amount=1, ip=192.168.1.3, number=4000008449433403, region=EAP, date=2022-01-22T17:11)
?[0m?[0;34m2023-04-24 19:31:39.810  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.3
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:39.810  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.3 result : false
?[0m?[0;34m2023-04-24 19:31:39.810  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:39.811  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:39.811  INFO 20796 --- [io-28852-exec-4] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T16:11, end : 2022-01-22T17:11
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:39.813  INFO 20796 --- [io-28852-exec-4] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T16:11, end : 2022-01-22T17:11
?[0m?[0;34m2023-04-24 19:31:39.813  INFO 20796 --- [io-28852-exec-4] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:39.815  INFO 20796 --- [io-28852-exec-4] a.s.t.TransactionVerificationService     : Count : 1 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:39.815  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:39.816  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:39.816  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1, number=4000008449433403, ip=192.168.1.3, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T17:11) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:39.819  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=24, amount=1, number=4000008449433403, ip=192.168.1.3, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T17:11) in the database.
?[0m?[1;31m
Start test 97?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Transaction must be ALLOWED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:39.902  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 200 request : TransactionRequest(amount=1, ip=192.168.1.3, number=4000008449433403, region=EAP, date=2022-01-22T17:12)
?[0m?[0;34m2023-04-24 19:31:39.902  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.3
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:39.903  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.3 result : false
?[0m?[0;34m2023-04-24 19:31:39.903  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:39.904  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:39.904  INFO 20796 --- [io-28852-exec-7] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T16:12, end : 2022-01-22T17:12
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:39.905  INFO 20796 --- [io-28852-exec-7] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T16:12, end : 2022-01-22T17:12
?[0m?[0;34m2023-04-24 19:31:39.905  INFO 20796 --- [io-28852-exec-7] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:39.906  INFO 20796 --- [io-28852-exec-7] a.s.t.TransactionVerificationService     : Count : 1 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:39.906  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:39.907  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:39.907  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1, number=4000008449433403, ip=192.168.1.3, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T17:12) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:39.908  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=25, amount=1, number=4000008449433403, ip=192.168.1.3, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T17:12) in the database.
?[0m?[1;31m
Start test 98?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Transaction must be MANUAL_PROCESSING due to - ip correlation rule'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:39.991  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 200 request : TransactionRequest(amount=1, ip=192.168.1.4, number=4000008449433403, region=EAP, date=2022-01-22T17:12)
?[0m?[0;34m2023-04-24 19:31:39.991  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.4
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:39.992  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.4 result : false
?[0m?[0;34m2023-04-24 19:31:39.992  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:39.993  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:39.993  INFO 20796 --- [io-28852-exec-3] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T16:12, end : 2022-01-22T17:12
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:39.994  INFO 20796 --- [io-28852-exec-3] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T16:12, end : 2022-01-22T17:12
?[0m?[0;34m2023-04-24 19:31:39.994  INFO 20796 --- [io-28852-exec-3] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:39.996  INFO 20796 --- [io-28852-exec-3] a.s.t.TransactionVerificationService     : Count : 2 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:39.996  INFO 20796 --- [io-28852-exec-3] a.s.t.TransactionVerificationService     : There are transactions from 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:39.996  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:39.998  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:39.998  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1, number=4000008449433403, ip=192.168.1.4, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T17:12) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:40.000  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=26, amount=1, number=4000008449433403, ip=192.168.1.4, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T17:12) in the database.
?[0m?[1;31m
Start test 99?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Transaction must be PROHIBITED due to - ip correlation rule'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:40.083  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 200 request : TransactionRequest(amount=1, ip=192.168.1.5, number=4000008449433403, region=EAP, date=2022-01-22T17:13)
?[0m?[0;34m2023-04-24 19:31:40.083  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.5
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:40.085  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.5 result : false
?[0m?[0;34m2023-04-24 19:31:40.085  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:40.086  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:40.086  INFO 20796 --- [o-28852-exec-10] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T16:13, end : 2022-01-22T17:13
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:40.087  INFO 20796 --- [o-28852-exec-10] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T16:13, end : 2022-01-22T17:13
?[0m?[0;34m2023-04-24 19:31:40.087  INFO 20796 --- [o-28852-exec-10] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:40.088  INFO 20796 --- [o-28852-exec-10] a.s.t.TransactionVerificationService     : Count : 3 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:40.088  INFO 20796 --- [o-28852-exec-10] a.s.t.TransactionVerificationService     : There are transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:40.088  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:40.089  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:40.089  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1, number=4000008449433403, ip=192.168.1.5, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T17:13) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:40.091  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=27, amount=1, number=4000008449433403, ip=192.168.1.5, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T17:13) in the database.
?[0m?[1;31m
Start test 100?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'A card must be added to Black List'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:40.180  INFO 20796 --- [io-28852-exec-8] antifraud.service.AntiFraudService       : Starting the process to create the stolen card with the request : StolenCardRequest(number=4000008449433403)
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into stolen_card (number, stolen_card_id) values (?, ?)
?[0m?[0;34m2023-04-24 19:31:40.183 ERROR 20796 --- [io-28852-exec-8] antifraud.service.AntiFraudService       : Saving the stolen card successfully StolenCard(stolenCardId=28, number=4000008449433403)
?[0m?[1;31m
Start test 101?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'IP must be added to Black List'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:40.270  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Starting the process to create the suspicious ip with the request : SuspiciousIpRequest(ip=192.168.1.5)
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into suspicious_ip (ip, suspicious_ip_id) values (?, ?)
?[0m?[0;34m2023-04-24 19:31:40.272 ERROR 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Saving the suspicious ip successfully SuspiciousIp(suspiciousIpId=29, ip=192.168.1.5)
?[0m?[1;31m
Start test 102?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Transaction must be PROHIBITED due to - amount, card-number, ip, ip-correlation reasons'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:40.357  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Processing the transaction with amount greater than 1500 request : TransactionRequest(amount=2000, ip=192.168.1.5, number=4000008449433403, region=EAP, date=2022-01-22T17:14)
?[0m?[0;34m2023-04-24 19:31:40.357  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.5
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:40.358  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.5 result : true
?[0m?[0;34m2023-04-24 19:31:40.358  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:40.358  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:40.359  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T16:14, end : 2022-01-22T17:14
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:40.360  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T16:14, end : 2022-01-22T17:14
?[0m?[0;34m2023-04-24 19:31:40.360  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:40.362  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : Count : 3 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:40.362  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : There are transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:40.362  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:40.363  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:40.364  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=2000, number=4000008449433403, ip=192.168.1.5, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T17:14) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:40.367  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=30, amount=2000, number=4000008449433403, ip=192.168.1.5, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T17:14) in the database.
?[0m?[1;31m
Start test 103?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'Card must be removed from Black List'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as stolen_c1_1_, stolencard0_.number as number2_1_ from stolen_card stolencard0_ where stolencard0_.number=?
?[0m?[0;34mHibernate: delete from stolen_card where stolen_card_id=?
?[0m?[1;31m
Start test 104?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'IP must be removed from Black List'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as suspicio1_2_, suspicious0_.ip as ip2_2_ from suspicious_ip suspicious0_ where suspicious0_.ip=?
?[0m?[0;34mHibernate: delete from suspicious_ip where suspicious_ip_id=?
?[0m?[1;31m
Start test 105?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Transaction must be ALLOWED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:40.623  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 200 request : TransactionRequest(amount=1, ip=192.168.1.2, number=4000008449433403, region=EAP, date=2022-01-21T17:10)
?[0m?[0;34m2023-04-24 19:31:40.623  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.2
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:40.624  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.2 result : false
?[0m?[0;34m2023-04-24 19:31:40.624  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:40.625  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:40.625  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-21T16:10, end : 2022-01-21T17:10
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:40.626  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-21T16:10, end : 2022-01-21T17:10
?[0m?[0;34m2023-04-24 19:31:40.626  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:40.628  INFO 20796 --- [io-28852-exec-1] a.s.t.TransactionVerificationService     : Count : 0 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:40.628  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:40.629  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:40.629  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1, number=4000008449433403, ip=192.168.1.2, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-21T17:10) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:40.631  INFO 20796 --- [io-28852-exec-1] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=31, amount=1, number=4000008449433403, ip=192.168.1.2, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-21T17:10) in the database.
?[0m?[1;31m
Start test 106?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Transaction must be ALLOWED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:40.713  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 200 request : TransactionRequest(amount=1, ip=192.168.1.2, number=4000008449433403, region=ECA, date=2022-01-21T17:11)
?[0m?[0;34m2023-04-24 19:31:40.713  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.2
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:40.714  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.2 result : false
?[0m?[0;34m2023-04-24 19:31:40.714  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:40.715  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:40.715  INFO 20796 --- [io-28852-exec-4] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : ECA, start : 2022-01-21T16:11, end : 2022-01-21T17:11
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:40.716  INFO 20796 --- [io-28852-exec-4] a.s.t.TransactionVerificationService     : Count : 1 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : ECA, start : 2022-01-21T16:11, end : 2022-01-21T17:11
?[0m?[0;34m2023-04-24 19:31:40.716  INFO 20796 --- [io-28852-exec-4] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:40.717  INFO 20796 --- [io-28852-exec-4] a.s.t.TransactionVerificationService     : Count : 0 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:40.718  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Retrieving the region : ECA in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:40.719  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=2, code=ECA, description=Europe and Central Asia)
?[0m?[0;34m2023-04-24 19:31:40.719  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1, number=4000008449433403, ip=192.168.1.2, region=Region(regionId=2, code=ECA, description=Europe and Central Asia), date=2022-01-21T17:11) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:40.721  INFO 20796 --- [io-28852-exec-4] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=32, amount=1, number=4000008449433403, ip=192.168.1.2, region=Region(regionId=2, code=ECA, description=Europe and Central Asia), date=2022-01-21T17:11) in the database.
?[0m?[1;31m
Start test 107?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Transaction must be ALLOWED'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:40.804  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 200 request : TransactionRequest(amount=1, ip=192.168.1.2, number=4000008449433403, region=ECA, date=2022-01-21T17:12)
?[0m?[0;34m2023-04-24 19:31:40.804  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.2
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:40.805  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.2 result : false
?[0m?[0;34m2023-04-24 19:31:40.805  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:40.806  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:40.806  INFO 20796 --- [io-28852-exec-7] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : ECA, start : 2022-01-21T16:12, end : 2022-01-21T17:12
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:40.808  INFO 20796 --- [io-28852-exec-7] a.s.t.TransactionVerificationService     : Count : 1 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : ECA, start : 2022-01-21T16:12, end : 2022-01-21T17:12
?[0m?[0;34m2023-04-24 19:31:40.808  INFO 20796 --- [io-28852-exec-7] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:40.809  INFO 20796 --- [io-28852-exec-7] a.s.t.TransactionVerificationService     : Count : 0 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:40.809  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Retrieving the region : ECA in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:40.810  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=2, code=ECA, description=Europe and Central Asia)
?[0m?[0;34m2023-04-24 19:31:40.810  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1, number=4000008449433403, ip=192.168.1.2, region=Region(regionId=2, code=ECA, description=Europe and Central Asia), date=2022-01-21T17:12) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:40.812  INFO 20796 --- [io-28852-exec-7] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=33, amount=1, number=4000008449433403, ip=192.168.1.2, region=Region(regionId=2, code=ECA, description=Europe and Central Asia), date=2022-01-21T17:12) in the database.
?[0m?[1;31m
Start test 108?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Transaction must be MANUAL_PROCESSING due to - region correlation rule'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:40.896  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 200 request : TransactionRequest(amount=1, ip=192.168.1.2, number=4000008449433403, region=HIC, date=2022-01-21T17:13)
?[0m?[0;34m2023-04-24 19:31:40.896  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.2
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:40.897  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.2 result : false
?[0m?[0;34m2023-04-24 19:31:40.897  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:40.898  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:40.899  INFO 20796 --- [io-28852-exec-3] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : HIC, start : 2022-01-21T16:13, end : 2022-01-21T17:13
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:40.901  INFO 20796 --- [io-28852-exec-3] a.s.t.TransactionVerificationService     : Count : 2 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : HIC, start : 2022-01-21T16:13, end : 2022-01-21T17:13
?[0m?[0;34m2023-04-24 19:31:40.901  INFO 20796 --- [io-28852-exec-3] a.s.t.TransactionVerificationService     : There are transactions from 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:40.901  INFO 20796 --- [io-28852-exec-3] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:40.902  INFO 20796 --- [io-28852-exec-3] a.s.t.TransactionVerificationService     : Count : 0 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:40.902  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Retrieving the region : HIC in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:40.903  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=3, code=HIC, description=High-Income countries)
?[0m?[0;34m2023-04-24 19:31:40.903  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1, number=4000008449433403, ip=192.168.1.2, region=Region(regionId=3, code=HIC, description=High-Income countries), date=2022-01-21T17:13) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:40.905  INFO 20796 --- [io-28852-exec-3] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=34, amount=1, number=4000008449433403, ip=192.168.1.2, region=Region(regionId=3, code=HIC, description=High-Income countries), date=2022-01-21T17:13) in the database.
?[0m?[1;31m
Start test 109?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Transaction must be PROHIBITED due to - region correlation rule'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:40.987  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 200 request : TransactionRequest(amount=1, ip=192.168.1.2, number=4000008449433403, region=SSA, date=2022-01-21T17:14)
?[0m?[0;34m2023-04-24 19:31:40.987  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.2
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:40.988  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.2 result : false
?[0m?[0;34m2023-04-24 19:31:40.988  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:40.989  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:40.989  INFO 20796 --- [o-28852-exec-10] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : SSA, start : 2022-01-21T16:14, end : 2022-01-21T17:14
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:40.990  INFO 20796 --- [o-28852-exec-10] a.s.t.TransactionVerificationService     : Count : 3 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : SSA, start : 2022-01-21T16:14, end : 2022-01-21T17:14
?[0m?[0;34m2023-04-24 19:31:40.990  INFO 20796 --- [o-28852-exec-10] a.s.t.TransactionVerificationService     : There are transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:40.990  INFO 20796 --- [o-28852-exec-10] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:40.991  INFO 20796 --- [o-28852-exec-10] a.s.t.TransactionVerificationService     : Count : 0 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:40.991  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Retrieving the region : SSA in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:40.993  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=7, code=SSA, description=Sub-Saharan Africa)
?[0m?[0;34m2023-04-24 19:31:40.993  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1, number=4000008449433403, ip=192.168.1.2, region=Region(regionId=7, code=SSA, description=Sub-Saharan Africa), date=2022-01-21T17:14) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:40.995  INFO 20796 --- [o-28852-exec-10] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=35, amount=1, number=4000008449433403, ip=192.168.1.2, region=Region(regionId=7, code=SSA, description=Sub-Saharan Africa), date=2022-01-21T17:14) in the database.
?[0m?[1;31m
Start test 110?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'A card must be added to Black List'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:41.075  INFO 20796 --- [io-28852-exec-8] antifraud.service.AntiFraudService       : Starting the process to create the stolen card with the request : StolenCardRequest(number=4000008449433403)
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into stolen_card (number, stolen_card_id) values (?, ?)
?[0m?[0;34m2023-04-24 19:31:41.077 ERROR 20796 --- [io-28852-exec-8] antifraud.service.AntiFraudService       : Saving the stolen card successfully StolenCard(stolenCardId=36, number=4000008449433403)
?[0m?[1;31m
Start test 111?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/suspicious-ip'
?[0m?[0;34mExpectations: 'IP must be added to Black List'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:41.159  INFO 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Starting the process to create the suspicious ip with the request : SuspiciousIpRequest(ip=192.168.1.2)
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into suspicious_ip (ip, suspicious_ip_id) values (?, ?)
?[0m?[0;34m2023-04-24 19:31:41.161 ERROR 20796 --- [io-28852-exec-9] antifraud.service.AntiFraudService       : Saving the suspicious ip successfully SuspiciousIp(suspiciousIpId=37, ip=192.168.1.2)
?[0m?[1;31m
Start test 112?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Transaction must be PROHIBITED due to - amount, card-number, ip, region-correlation reasons'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:41.241  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Processing the transaction with amount greater than 1500 request : TransactionRequest(amount=2000, ip=192.168.1.2, number=4000008449433403, region=SA, date=2022-01-21T17:15)
?[0m?[0;34m2023-04-24 19:31:41.242  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.2
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:41.243  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.2 result : true
?[0m?[0;34m2023-04-24 19:31:41.243  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:41.244  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:41.244  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : SA, start : 2022-01-21T16:15, end : 2022-01-21T17:15
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:41.246  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : Count : 4 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : SA, start : 2022-01-21T16:15, end : 2022-01-21T17:15
?[0m?[0;34m2023-04-24 19:31:41.246  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : There are transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:41.246  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:41.247  INFO 20796 --- [io-28852-exec-6] a.s.t.TransactionVerificationService     : Count : 0 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:41.247  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Retrieving the region : SA in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:41.248  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=6, code=SA, description=South Asia)
?[0m?[0;34m2023-04-24 19:31:41.248  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=2000, number=4000008449433403, ip=192.168.1.2, region=Region(regionId=6, code=SA, description=South Asia), date=2022-01-21T17:15) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:41.250  INFO 20796 --- [io-28852-exec-6] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=38, amount=2000, number=4000008449433403, ip=192.168.1.2, region=Region(regionId=6, code=SA, description=South Asia), date=2022-01-21T17:15) in the database.
?[0m?[1;31m
Start test 113?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/stolencard'
?[0m?[0;34mExpectations: 'Card must be removed from Black List'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as stolen_c1_1_, stolencard0_.number as number2_1_ from stolen_card stolencard0_ where stolencard0_.number=?
?[0m?[0;34mHibernate: delete from stolen_card where stolen_card_id=?
?[0m?[1;31m
Start test 114?[0m
?[0;34mTest case
?[0m?[0;34mTesting api: '/api/antifraud/transaction'
?[0m?[0;34mExpectations: 'Transaction must be MANUAL_PROCESSING due to - ip correlation rule'
?[0m?[0;34m-----
?[0m?[0;34mHibernate: select user0_.user_id as user_id1_4_, user0_.name as name2_4_, user0_.password as password3_4_, user0_.role as role4_4_, user0_.unlock as unlock5_4_, user0_.username as username6_4_ from user user0_ where user0_.username=?
?[0m?[0;34m2023-04-24 19:31:41.417  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Processing the transaction with amount less than or equal 200 request : TransactionRequest(amount=1, ip=192.168.1.4, number=4000008449433403, region=EAP, date=2022-01-22T17:12)
?[0m?[0;34m2023-04-24 19:31:41.417  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Starting the validation there is a record with the ip : 192.168.1.4
?[0m?[0;34mHibernate: select suspicious0_.suspicious_ip_id as col_0_0_ from suspicious_ip suspicious0_ where suspicious0_.ip=? limit ?
?[0m?[0;34m2023-04-24 19:31:41.419  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Result the existence of a record with ip : 192.168.1.4 result : false
?[0m?[0;34m2023-04-24 19:31:41.419  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Starting the validation there is a record with the card number : 4000008449433403
?[0m?[0;34mHibernate: select stolencard0_.stolen_card_id as col_0_0_ from stolen_card stolencard0_ where stolencard0_.number=? limit ?
?[0m?[0;34m2023-04-24 19:31:41.420  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Starting the verification of the region
?[0m?[0;34m2023-04-24 19:31:41.420  INFO 20796 --- [io-28852-exec-5] a.s.t.TransactionVerificationService     : Counting the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T16:12, end : 2022-01-22T17:12
?[0m?[0;34mHibernate: Select count(distinct r.CODE) from Transaction t inner join Region r on t.REGION_ID = r.REGION_ID where r.CODE != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:41.421  INFO 20796 --- [io-28852-exec-5] a.s.t.TransactionVerificationService     : Count : 0 the transactions from more than 2 regions of the world other than the region of the transaction that is being verified in the last hour in the transaction history region : EAP, start : 2022-01-22T16:12, end : 2022-01-22T17:12
?[0m?[0;34m2023-04-24 19:31:41.421  INFO 20796 --- [io-28852-exec-5] a.s.t.TransactionVerificationService     : Counting transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34mHibernate: Select count(distinct t.IP) from Transaction t where t.IP != ? and t.DATE between ? and ?
?[0m?[0;34m2023-04-24 19:31:41.423  INFO 20796 --- [io-28852-exec-5] a.s.t.TransactionVerificationService     : Count : 2 transactions from more than 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:41.423  INFO 20796 --- [io-28852-exec-5] a.s.t.TransactionVerificationService     : There are transactions from 2 unique IP addresses other than the IP of the transaction that is being verified in the last hour in the transaction history
?[0m?[0;34m2023-04-24 19:31:41.423  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Retrieving the region : EAP in the database.
?[0m?[0;34mHibernate: select region0_.region_id as region_i1_0_, region0_.code as code2_0_, region0_.description as descript3_0_ from region region0_ where region0_.code=?
?[0m?[0;34m2023-04-24 19:31:41.424  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Retrieved region : Region(regionId=1, code=EAP, description=East Asia and Pacific)
?[0m?[0;34m2023-04-24 19:31:41.425  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Saving the transaction : Transaction(transactionId=null, amount=1, number=4000008449433403, ip=192.168.1.4, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T17:12) in the database.
?[0m?[0;34mHibernate: call next value for hibernate_sequence
?[0m?[0;34mHibernate: insert into transaction (amount, date, ip, number, region_id, transaction_id) values (?, ?, ?, ?, ?, ?)
?[0m?[0;34m2023-04-24 19:31:41.427  INFO 20796 --- [io-28852-exec-5] antifraud.service.AntiFraudService       : Saved successfully the transaction : Transaction(transactionId=39, amount=1, number=4000008449433403, ip=192.168.1.4, region=Region(regionId=1, code=EAP, description=East Asia and Pacific), date=2022-01-22T17:12) in the database.
?[0m]]></system-out>
  <system-err><![CDATA[?[0;34mException in thread "task-2" org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/10000215610/Documents/GitHub/Anti-Fraud%20System/Anti-Fraud%20System/task/build/resources/main/data.sql]: DELETE FROM region; nested exception is org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Referential integrity constraint violation: "FKAYR4TU9SHL47ODLKWY9H69VHL: PUBLIC.TRANSACTION FOREIGN KEY(REGION_ID) REFERENCES PUBLIC.REGION(REGION_ID) (1)"; SQL statement:
?[0m?[0;34mDELETE FROM region [23503-200]
?[0m?[0;34m	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:622)
?[0m?[0;34m	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
?[0m?[0;34m	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
?[0m?[0;34m	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:203)
?[0m?[0;34m	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:120)
?[0m?[0;34m	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
?[0m?[0;34m	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
?[0m?[0;34m	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
?[0m?[0;34m	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
?[0m?[0;34m	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
?[0m?[0;34m	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
?[0m?[0;34m	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
?[0m?[0;34m	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
?[0m?[0;34m	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.access$100(DataSourceInitializedPublisher.java:50)
?[0m?[0;34m	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher$DataSourceSchemaCreatedPublisher.lambda$postProcessEntityManagerFactory$0(DataSourceInitializedPublisher.java:200)
?[0m?[0;34m	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
?[0m?[0;34m	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
?[0m?[0;34m	at java.base/java.lang.Thread.run(Thread.java:833)
?[0m?[0;34mCaused by: org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Referential integrity constraint violation: "FKAYR4TU9SHL47ODLKWY9H69VHL: PUBLIC.TRANSACTION FOREIGN KEY(REGION_ID) REFERENCES PUBLIC.REGION(REGION_ID) (1)"; SQL statement:
?[0m?[0;34mDELETE FROM region [23503-200]
?[0m?[0;34m	at org.h2.message.DbException.getJdbcSQLException(DbException.java:459)
?[0m?[0;34m	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
?[0m?[0;34m	at org.h2.message.DbException.get(DbException.java:205)
?[0m?[0;34m	at org.h2.message.DbException.get(DbException.java:181)
?[0m?[0;34m	at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:373)
?[0m?[0;34m	at org.h2.constraint.ConstraintReferential.checkRowRefTable(ConstraintReferential.java:390)
?[0m?[0;34m	at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:265)
?[0m?[0;34m	at org.h2.table.Table.fireConstraints(Table.java:1057)
?[0m?[0;34m	at org.h2.table.Table.fireAfterRow(Table.java:1075)
?[0m?[0;34m	at org.h2.command.dml.Delete.update(Delete.java:153)
?[0m?[0;34m	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
?[0m?[0;34m	at org.h2.command.Command.executeUpdate(Command.java:251)
?[0m?[0;34m	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:228)
?[0m?[0;34m	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
?[0m?[0;34m	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
?[0m?[0;34m	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
?[0m?[0;34m	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:601)
?[0m?[0;34m	... 17 more
]]></system-err>
</testsuite>
